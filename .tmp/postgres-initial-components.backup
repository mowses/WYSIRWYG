--
-- PostgreSQL database dump
--

-- Dumped from database version 9.3.9
-- Dumped by pg_dump version 9.3.9
-- Started on 2015-07-04 20:35:24 BRT

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;

SET search_path = public, pg_catalog;

--
-- TOC entry 1974 (class 0 OID 16417)
-- Dependencies: 171
-- Data for Name: components; Type: TABLE DATA; Schema: public; Owner: postgres
--

INSERT INTO components (name, template, data, styles, i18n, components, id, "createdAt", "updatedAt") VALUES ('Result Box', '<div>
    <i18n id="query"></i18n>
</div>
<hr />
<!--{{data.data.searchData}} <hr/> -->
<table border="1" style="float:left; margin-right: 10px;" 
    ng-repeat="(kind, type) in data.data.searchData">
    <caption class="id-12345">{{kind}}</caption>
    <tr>
        <th>Name</th>
        <th>Type</th>
    </tr>
    <tr ng-repeat="(i, item) in type | filter:data.data.query ">
        <td>{{item.name}}</td>
        <td>{{item.type}}</td>
    </tr>
    <tr>
        <td colspan="2">
            <i18n id="result"></i18n>
        </td>
    </tr>
</table>
<br clear="all" />', '{"query":"","searchData":{"music":[{"name":"Gammaray","type":"Metal"},{"name":"Sabaton","type":"Metal"},{"name":"Angra","type":"Metal"}]}}', '{"&.theme-default":{"background":"yellow","position":"absolute","top":"10px","right":"100px","bottom":"10px","left":"100px",".id-12345":{"background":"red","color":"green"}},"&.theme-algo":{"background":"blue","position":"relative","width":"200px","color":"black",".id-12345":{"background":"green","color":"black"}}}', '{"pt-BR":{"query":"Sua pesquisa por <data id=\"query\"></data>","result":"Retornou <b>{{(type | filter:data.data.query).length}}</b> resultados."}}', '{}', 1, '2015-07-04 12:50:59-03', '2015-07-04 12:50:59-03');
INSERT INTO components (name, template, data, styles, i18n, components, id, "createdAt", "updatedAt") VALUES ('The Searcher', '<h1><i18n id="salutation" language="pt-BR"></h1>
<h2><i18n id="introduction"></i18n></h2>
<p>
    <i18n id="description"></i18n>
</p>
<component id="Foolish" data="data.components.Foolish"></component>', '{"name":"Moisés mosele"}', '{"&.theme-default":{"position":"absolute","input":{"background":"crimson"}},"&.theme-1":{"background":"yellow","input":{"background":"pink","border":"3px dashed grey","border-bottom":"5px solid black"}}}', '{"pt-BR":{"salutation":"Olá <data id=\"name\"></data>","introduction":"Esse é nosso primeiro exemplo.","description":"Essa é a descrição. Note que não foi informado o idioma para este texto no template. Está exibindo o texto do idioma padrão do componente."},"en-US":{"salutation":"Hello <data id=\"name\"></data>","introduction":"This is our components example.","description":"This is the description. Note that was not passed the language attribute to this text in the template. It''s showing the text from the default language of the component."}}', '{
    "Foolish": {
        "name": "Foolish",
        "template": "<i18n id=\"currentLanguage\"></i18n> - <i18n id=\"searchFor\"></i18n> <input type=\"text\" name=\"foolish\" ng-click=\"controller.setTodayBirthDate()\" ng-blur=\"controller.setOldBirthDate()\" ng-keyup=\"controller.logInputText()\" ng-model=\"data.components[''1''].data.query\" /> {{data.data.birthday | date : ''dd/MM/yyyy''}} <component id=\"component-1\" controller-name=\"nullController\" class=\"theme-algo\" data=\"data.components[''1'']\"></component>",
        "data": {
            "birthday": "1986-01-13"
        },
        "i18n": {
            "en-US": {
                "currentLanguage": "Current Language for this i18n is: {{language}} and for the parent component is: {{$parent.$parent.$parent.language}}",
                "searchFor": "Search:"
            },
            "pt-BR": {
                "currentLanguage": "Idioma corrente para este i18n é: {{language}} e para o component pai é: {{$parent.$parent.$parent.language}}",
                "searchFor": "Localizar:"
            }
        },
        "components": {
            "1": {
                "reference": "1",
                "data": {
                    "searchData": {
                        "series": [{
                            "name": "Two and a Half Men",
                            "type": "Comedy"
                        }, {
                            "name": "Walking Dead",
                            "type": "Zombie"
                        }, {
                            "name": "Game of Thrones",
                            "type": "Drama"
                        }, {
                            "name": "Bible",
                            "type": "Religious"
                        }, {
                            "name": "Breaking Bad",
                            "type": "Drama"
                        }, {
                            "name": "Generals at War",
                            "type": "Documentary"
                        }, {
                            "name": "History of Humanity",
                            "type": "Documentary"
                        }, {
                            "name": "The Prime Fields",
                            "type": "Documentary"
                        }, {
                            "name": "The Adventures of Robin Hood",
                            "type": "Cartoon"
                        }, {
                            "name": "Adventures of Sonic The Hedgehog",
                            "type": "Cartoon"
                        }, {
                            "name": "The Adventures of Jimmy Neutron: Boy Genius",
                            "type": "Cartoon"
                        }, {
                            "name": "The Adventures of Rin Tin Tin",
                            "type": "Cartoon"
                        }, {
                            "name": "The Adventures of Super Mario Bros. 3",
                            "type": "Cartoon"
                        }, {
                            "name": "Afro Samurai",
                            "type": "Cartoon"
                        }, {
                            "name": "Adventures of Superman",
                            "type": "TV Show"
                        }, {
                            "name": "ALF",
                            "type": "TV Show"
                        }],
                        "movies": [{
                            "name": "Saving Private Ryan",
                            "type": "World War II"
                        }, {
                            "name": "Shrek",
                            "type": "Animation"
                        }]
                    }
                },
                "i18n": {
                    "pt-BR": {
                        "query": "SUA PEXQUISA POR:::: <data id=\"query\"></data>"
                    }
                }
            }
        }
    }
}', 2, '2015-07-04 12:57:06-03', '2015-07-04 12:57:06-03');


--
-- TOC entry 1979 (class 0 OID 0)
-- Dependencies: 170
-- Name: components_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('components_id_seq', 2, true);


-- Completed on 2015-07-04 20:35:24 BRT

--
-- PostgreSQL database dump complete
--

